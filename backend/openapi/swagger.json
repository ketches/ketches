{
    "swagger": "2.0",
    "info": {
        "description": "Ketches api server",
        "title": "Ketches API Server",
        "contact": {},
        "version": "v1"
    },
    "paths": {
        "/api/v1/admin/resources": {
            "get": {
                "description": "Get all clusters and cluster nodes for admin",
                "tags": [
                    "admin"
                ],
                "summary": "Get all clusters and cluster nodes for admin",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.GetAdminResourcesResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/env-vars": {
            "delete": {
                "description": "Delete environment variables for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppEnvVar"
                ],
                "summary": "Delete App Env Vars",
                "parameters": [
                    {
                        "description": "EnvVar IDs",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteAppEnvVarsRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/apps/env-vars/{envVarID}": {
            "put": {
                "description": "Update an environment variable for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppEnvVar"
                ],
                "summary": "Update App Env Var",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Env Var ID",
                        "name": "envVarID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Env Var",
                        "name": "envVar",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AppEnvVarModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppEnvVarModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/volumes": {
            "delete": {
                "description": "Delete storage volumes for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppVolume"
                ],
                "summary": "Delete App Volumes",
                "parameters": [
                    {
                        "description": "Volume IDs",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteAppVolumesRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}": {
            "get": {
                "description": "Get app by app ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Get App",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Update App",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated app data",
                        "name": "app",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAppRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an app by app ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Delete App",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/action": {
            "post": {
                "description": "Perform an action on an app (e.g., deploy, restart)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "App Action",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Action to perform on the app",
                        "name": "action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AppActionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/command": {
            "put": {
                "description": "Set the startup command of an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Set App Command",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Set app command",
                        "name": "command",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SetAppCommandRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/config-files": {
            "get": {
                "description": "List configuration files for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppConfigFile"
                ],
                "summary": "List App Config Files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.AppConfigFileModel"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new configuration file for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppConfigFile"
                ],
                "summary": "Create App Config File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Config File",
                        "name": "configFile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAppConfigFileRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppConfigFileModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete configuration files for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppConfigFile"
                ],
                "summary": "Delete App Config Files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Config File IDs",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteAppConfigFilesRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/config-files/{configFileID}": {
            "put": {
                "description": "Update a configuration file for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppConfigFile"
                ],
                "summary": "Update App Config File",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Config File ID",
                        "name": "configFileID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Config File",
                        "name": "configFile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAppConfigFileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppConfigFileModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/env-vars": {
            "get": {
                "description": "List environment variables for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppEnvVar"
                ],
                "summary": "List App Env Vars",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.AppEnvVarModel"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new environment variable for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppEnvVar"
                ],
                "summary": "Create App Env Var",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Env Var",
                        "name": "envVar",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AppEnvVarModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppEnvVarModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/gateways": {
            "get": {
                "description": "List gateways for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppGateway"
                ],
                "summary": "List App Gateways",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.AppGatewayModel"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new gateway for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppGateway"
                ],
                "summary": "Create App Gateway",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Gateway",
                        "name": "gateway",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAppGatewayRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppGatewayModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a gateway for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppGateway"
                ],
                "summary": "Delete App Gateway",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Gateway IDs",
                        "name": "gatewayIDs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteAppGatewaysRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/gateways/{gatewayID}": {
            "put": {
                "description": "Update a gateway for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppGateway"
                ],
                "summary": "Update App Gateway",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gatewayID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Gateway",
                        "name": "gateway",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAppGatewayRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppGatewayModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/gateways/{gatewayID}/toggle": {
            "patch": {
                "description": "Toggle exposed status of a gateway for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppGateway"
                ],
                "summary": "Toggle App Gateway Exposed",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Gateway ID",
                        "name": "gatewayID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Exposed Status",
                        "name": "exposed",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ToggleAppGatewayExposedRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/image": {
            "put": {
                "description": "Update the image of an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Update App Image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New app image",
                        "name": "image",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAppImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/instances": {
            "get": {
                "description": "List instances of an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "List App Instances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.AppInstanceModel"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/instances/terminate": {
            "post": {
                "description": "Terminate a specific instance of an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Terminate App Instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Terminate app instance request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TerminateAppInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/instances/{instanceName}/containers/{containerName}/exec": {
            "get": {
                "description": "Exec into a terminal of a specific container in an app instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Exec App Container Terminal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Instance name",
                        "name": "instanceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Container name",
                        "name": "containerName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request to execute command in container",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ExecAppContainerTerminalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/instances/{instanceName}/containers/{containerName}/logs": {
            "get": {
                "description": "View logs of a specific container in an app instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "View App Container Logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Instance name",
                        "name": "instanceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Container name",
                        "name": "containerName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "appID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Optional container name to filter logs",
                        "name": "containerName",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to stream logs",
                        "name": "follow",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "instanceName",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of log lines to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to fetch logs from the previous instance of the container",
                        "name": "previous",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to include timestamps in logs",
                        "name": "showTimestamps",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Fetch logs since this many seconds ago",
                        "name": "sinceSeconds",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Fetch logs since this time (RFC3339 format)",
                        "name": "sinceTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of log lines to return from the end",
                        "name": "tailLines",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/probes": {
            "get": {
                "description": "List probes for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppProbe"
                ],
                "summary": "List App Probes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.AppProbeModel"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new probe for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppProbe"
                ],
                "summary": "Create App Probe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Probe",
                        "name": "probe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAppProbeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppProbeModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/probes/{probeID}": {
            "put": {
                "description": "Update a probe for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppProbe"
                ],
                "summary": "Update App Probe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Probe ID",
                        "name": "probeID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Probe",
                        "name": "probe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAppProbeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppProbeModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a probe for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppProbe"
                ],
                "summary": "Delete App Probe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Probe ID",
                        "name": "probeID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/probes/{probeID}/toggle": {
            "put": {
                "description": "Enable or disable a probe for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppProbe"
                ],
                "summary": "Toggle App Probe",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Probe ID",
                        "name": "probeID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Enabled",
                        "name": "enabled",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ToggleAppProbeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppProbeModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/ref": {
            "get": {
                "description": "Get app ref by app ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Get App Ref",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppRef"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/resource": {
            "put": {
                "description": "Set the resource of an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Set App Resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Set app resource",
                        "name": "resource",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SetAppResourceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/running/info": {
            "get": {
                "description": "Get the running information app, including status and instances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Get App Running Info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "appID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Optional container name to filter logs",
                        "name": "containerName",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to stream logs",
                        "name": "follow",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "instanceName",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of log lines to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to fetch logs from the previous instance of the container",
                        "name": "previous",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to include timestamps in logs",
                        "name": "showTimestamps",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Fetch logs since this many seconds ago",
                        "name": "sinceSeconds",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Fetch logs since this time (RFC3339 format)",
                        "name": "sinceTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of log lines to return from the end",
                        "name": "tailLines",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/scheduling-rule": {
            "get": {
                "description": "Get the scheduling rule of an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Get App Scheduling Rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppSchedulingRuleModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Set the scheduling rule of an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Set App Scheduling Rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Set app scheduling rule",
                        "name": "schedulingRule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SetAppSchedulingRuleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppSchedulingRuleModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the scheduling rule of an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Delete App Scheduling Rule",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/volumes": {
            "get": {
                "description": "List storage volumes for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppVolume"
                ],
                "summary": "List App Volumes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.AppVolumeModel"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new storage volume for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppVolume"
                ],
                "summary": "Create App Volume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Volume",
                        "name": "volume",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAppVolumeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppVolumeModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/volumes/{volumeID}": {
            "put": {
                "description": "Update a storage volume for an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppVolume"
                ],
                "summary": "Update App Volume",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Volume",
                        "name": "volume",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAppVolumeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppVolumeModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/clusters": {
            "get": {
                "description": "List clusters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "List Clusters",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "pageNo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ListClustersResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Create Cluster",
                "parameters": [
                    {
                        "description": "Cluster information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateClusterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ClusterModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/ping": {
            "post": {
                "description": "Ping a cluster's KubeConfig to check if it is connectable",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Ping Cluster KubeConfig",
                "parameters": [
                    {
                        "description": "KubeConfig to ping",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PingClusterKubeConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/refs": {
            "get": {
                "description": "Get all clusters for refs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "All Cluster Refs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ClusterRef"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}": {
            "get": {
                "description": "Get cluster by cluster ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get Cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ClusterModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Update Cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated cluster information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateClusterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ClusterModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a cluster by cluster ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Delete Cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/disable": {
            "put": {
                "description": "Disable a cluster by cluster ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Disable Cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/enable": {
            "put": {
                "description": "Enable a cluster by cluster ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Enable Cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/extensions": {
            "get": {
                "description": "List extensions available in a cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "List Cluster Extensions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ListClusterExtensionsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/extensions/enable": {
            "post": {
                "description": "Enable the cluster extension feature for the specified cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Enable Cluster Extension",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/extensions/feature-enabled": {
            "get": {
                "description": "Check if the cluster extension feature is enabled for the specified cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Check Cluster Extension Feature Enabled",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/extensions/install": {
            "post": {
                "description": "Install an extension in the specified cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Install Cluster Extension",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Extension installation information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InstallClusterExtensionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/extensions/{extensionName}": {
            "delete": {
                "description": "Uninstall an extension from the specified cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Uninstall Cluster Extension",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Extension Name",
                        "name": "extensionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/extensions/{extensionName}/installed-values": {
            "get": {
                "description": "Get the current values.yaml for an installed cluster extension",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get installed extension current values",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Extension Name",
                        "name": "extensionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/extensions/{extensionName}/update": {
            "put": {
                "description": "Update an installed cluster extension",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Update cluster extension",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Extension Name",
                        "name": "extensionName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Extension update information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateClusterExtensionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/extensions/{extensionName}/values/{version}": {
            "get": {
                "description": "Get the default values.yaml for a specific cluster extension version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get cluster extension default values",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Extension Name",
                        "name": "extensionName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Extension Version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/nodes": {
            "get": {
                "description": "Get all nodes of the specified cluster",
                "tags": [
                    "Cluster"
                ],
                "summary": "List nodes of a cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ClusterNodeModel"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/nodes/labels": {
            "get": {
                "description": "Get all node labels from the specified cluster",
                "tags": [
                    "Cluster"
                ],
                "summary": "List Cluster Node Labels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/nodes/refs": {
            "get": {
                "description": "Get all node references of the specified cluster",
                "tags": [
                    "Cluster"
                ],
                "summary": "List references of cluster nodes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ClusterNodeRef"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/nodes/taints": {
            "get": {
                "description": "Get all node taints from the specified cluster",
                "tags": [
                    "Cluster"
                ],
                "summary": "List Cluster Node Taints",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ClusterNodeTaintModel"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/nodes/{nodeName}": {
            "get": {
                "description": "Get details of a specific node in the cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get Cluster Node",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Node Name",
                        "name": "nodeName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ClusterNodeModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/ref": {
            "get": {
                "description": "Get cluster ref by cluster ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get Cluster Ref",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ClusterRef"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/envs/{envID}": {
            "get": {
                "description": "Get env by env ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Env"
                ],
                "summary": "Get Env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Env ID",
                        "name": "envID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.EnvModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Env"
                ],
                "summary": "Update Env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Env ID",
                        "name": "envID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Env Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateEnvRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.EnvModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an env by env ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Env"
                ],
                "summary": "Delete Env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Env ID",
                        "name": "envID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/envs/{envID}/apps": {
            "get": {
                "description": "List apps under a specific env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "List Apps Under Env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Env ID",
                        "name": "envID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "envID",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageNo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ListAppsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new app under a specific env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Create App Under Env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Env ID",
                        "name": "envID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "App data",
                        "name": "app",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAppRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/envs/{envID}/apps/refs": {
            "get": {
                "description": "Get all apps for refs under a specific env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "All App Refs Under Env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Env ID",
                        "name": "envID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "envID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.AppRef"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/envs/{envID}/ref": {
            "get": {
                "description": "Get env ref by env ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Env"
                ],
                "summary": "Get Env Ref",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Env ID",
                        "name": "envID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.EnvRef"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/projects": {
            "get": {
                "description": "List projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "List Projects",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "pageNo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ListProjectResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Create Project",
                "parameters": [
                    {
                        "description": "Project data",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ProjectModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/projects/refs": {
            "get": {
                "description": "Get all projects for refs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "All Project Refs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ProjectRef"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{projectID}": {
            "get": {
                "description": "Get project by project ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ProjectModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project data",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ProjectModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a project by project ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Delete Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/v1/projects/{projectID}/envs": {
            "get": {
                "description": "List envs under a specific project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Env"
                ],
                "summary": "List Envs Under Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "pageNo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "projectID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ListEnvsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new env under a specific project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Env"
                ],
                "summary": "Create Env Under Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create Env Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateEnvRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.EnvModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{projectID}/envs/refs": {
            "get": {
                "description": "Get all envs for refs under a specific project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Env"
                ],
                "summary": "All Env Refs Under Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "projectID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.EnvRef"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{projectID}/members": {
            "get": {
                "description": "List members of a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "List Project Members",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "pageNo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ListProjectMembersResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Add members to a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Add Project Members",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project members data",
                        "name": "members",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddProjectMembersRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ProjectMemberModel"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a member from a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Remove Project Member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/v1/projects/{projectID}/members/addable": {
            "get": {
                "description": "List users that can be added to a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "List Addable Project Members",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ProjectMemberModel"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{projectID}/members/{userID}": {
            "put": {
                "description": "Update a project member's role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update Project Member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project member data",
                        "name": "member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateProjectMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ProjectMemberModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{projectID}/ref": {
            "get": {
                "description": "Get project ref by project ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get Project Ref",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ProjectRef"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{projectID}/statistics": {
            "get": {
                "description": "Get project statistics including total environments, apps, and members.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get Project Statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ProjectStatisticsModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/statistics": {
            "get": {
                "description": "Get platform statistics including total clusters, projects, users, environments, apps, and",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Platform"
                ],
                "summary": "Get Platform Statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.PlatformStatisticsModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "description": "List users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "List Users",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "pageNo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ListUsersResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/refresh-token": {
            "post": {
                "description": "Refresh user access token using refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Refresh User Token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/resources": {
            "get": {
                "description": "Get all ProjectRef, EnvRef, AppRef user has permission to query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get all resources user can access",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.GetUserResourcesResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/sign-in": {
            "post": {
                "description": "Sign in an existing user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Sign In User",
                "parameters": [
                    {
                        "description": "User sign in request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserSignInRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/sign-up": {
            "post": {
                "description": "Sign up a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Sign Up User",
                "parameters": [
                    {
                        "description": "User sign up request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserSignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/{userID}": {
            "get": {
                "description": "Get user by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Delete user request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteUserRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/{userID}/change-role": {
            "put": {
                "description": "Change user role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Change User Role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User change role request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserChangeRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/{userID}/rename": {
            "put": {
                "description": "Rename user with password verification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Rename User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User rename request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserRenameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/{userID}/reset-password": {
            "put": {
                "description": "Reset user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Reset User Password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User reset password request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/{userID}/sign-out": {
            "post": {
                "description": "Sign out user by clearing cookies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Sign Out User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User sign out request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserSignOutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "description": "Get api server health status",
                "summary": "Healthz",
                "responses": {}
            }
        },
        "/version": {
            "get": {
                "description": "Get api server version",
                "summary": "Version",
                "responses": {}
            }
        }
    },
    "definitions": {
        "api.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                }
            }
        },
        "app.AppAction": {
            "type": "string",
            "enum": [
                "deploy",
                "start",
                "stop",
                "rollback",
                "update",
                "redeploy",
                "debug",
                "debugOff",
                "delete"
            ],
            "x-enum-varnames": [
                "AppActionDeploy",
                "AppActionStart",
                "AppActionStop",
                "AppActionRollback",
                "AppActionUpdate",
                "AppActionRedeploy",
                "AppActionDebug",
                "AppActionDebugOff",
                "AppActionDelete"
            ]
        },
        "app.AppType": {
            "type": "string",
            "enum": [
                "Deployment",
                "StatefulSet"
            ],
            "x-enum-varnames": [
                "AppTypeDeployment",
                "AppTypeStatefulSet"
            ]
        },
        "models.AddProjectMembersRequest": {
            "type": "object",
            "required": [
                "projectMembers"
            ],
            "properties": {
                "projectMembers": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.ProjectMemberRole"
                    }
                }
            }
        },
        "models.AppActionRequest": {
            "type": "object",
            "required": [
                "action"
            ],
            "properties": {
                "action": {
                    "$ref": "#/definitions/app.AppAction"
                }
            }
        },
        "models.AppConfigFileModel": {
            "type": "object",
            "properties": {
                "appID": {
                    "type": "string"
                },
                "configFileID": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "fileMode": {
                    "type": "string"
                },
                "mountPath": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.AppEnvVarModel": {
            "type": "object",
            "properties": {
                "appID": {
                    "type": "string"
                },
                "envVarID": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.AppGatewayModel": {
            "type": "object",
            "required": [
                "gatewayPort"
            ],
            "properties": {
                "appID": {
                    "type": "string"
                },
                "certID": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "exposed": {
                    "type": "boolean"
                },
                "gatewayID": {
                    "type": "string"
                },
                "gatewayPort": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "models.AppInstanceContainerModel": {
            "type": "object",
            "properties": {
                "containerName": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.AppInstanceModel": {
            "type": "object",
            "properties": {
                "containerCount": {
                    "type": "integer"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AppInstanceContainerModel"
                    }
                },
                "initContainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AppInstanceContainerModel"
                    }
                },
                "instanceIP": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                },
                "limitCPU": {
                    "description": "e.g., \"1\", \"2\", \"4\"",
                    "type": "string"
                },
                "limitMemory": {
                    "description": "e.g., \"512Mi\", \"1Gi\", \"2Gi\"",
                    "type": "string"
                },
                "nodeIP": {
                    "type": "string"
                },
                "nodeName": {
                    "type": "string"
                },
                "requestCPU": {
                    "description": "e.g., \"500m\", \"1\", \"2\"",
                    "type": "string"
                },
                "requestMemory": {
                    "description": "e.g., \"256Mi\", \"512Mi\", \"1Gi\"",
                    "type": "string"
                },
                "revision": {
                    "type": "string"
                },
                "runningDuration": {
                    "description": "e.g., \"5m\", \"2h30m\"",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.AppModel": {
            "type": "object",
            "properties": {
                "actualEdition": {
                    "description": "Edition of the currently running app",
                    "type": "string"
                },
                "actualReplicas": {
                    "description": "Number of currently running replicas",
                    "type": "integer"
                },
                "appID": {
                    "type": "string"
                },
                "appType": {
                    "description": "e.g., \"deployment\", \"statefulset\", \"daemonset\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/app.AppType"
                        }
                    ]
                },
                "clusterID": {
                    "type": "string"
                },
                "clusterNamespace": {
                    "type": "string"
                },
                "clusterSlug": {
                    "type": "string"
                },
                "containerCommand": {
                    "type": "string"
                },
                "containerImage": {
                    "type": "string"
                },
                "createdAt": {
                    "description": "ISO 8601 format",
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "edition": {
                    "type": "string"
                },
                "envID": {
                    "type": "string"
                },
                "envSlug": {
                    "type": "string"
                },
                "limitCPU": {
                    "description": "in milliCPU (e.g., 1000 for 1 CPU, 2000 for 2 CPUs)",
                    "type": "integer"
                },
                "limitMemory": {
                    "description": "in MiB",
                    "type": "integer"
                },
                "nodeName": {
                    "description": "Scheduling rules",
                    "type": "string"
                },
                "nodeSelector": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "projectID": {
                    "type": "string"
                },
                "projectSlug": {
                    "type": "string"
                },
                "registryPassword": {
                    "type": "string"
                },
                "registryUsername": {
                    "type": "string"
                },
                "replicas": {
                    "description": "Number of replicas for the app",
                    "type": "integer"
                },
                "requestCPU": {
                    "description": "in milliCPU (e.g., 500 for 0.5 CPU, 1000 for 1 CPU)",
                    "type": "integer"
                },
                "requestMemory": {
                    "description": "in MiB",
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "description": "e.g., \"undeployed\", \"starting\", \"running\", \"stopped\", \"stopping\"",
                    "type": "string"
                }
            }
        },
        "models.AppProbeModel": {
            "type": "object",
            "required": [
                "probeMode"
            ],
            "properties": {
                "appID": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "execCommand": {
                    "type": "string"
                },
                "failureThreshold": {
                    "type": "integer"
                },
                "httpGetPath": {
                    "type": "string"
                },
                "httpGetPort": {
                    "type": "integer"
                },
                "initialDelaySeconds": {
                    "type": "integer"
                },
                "periodSeconds": {
                    "type": "integer"
                },
                "probeID": {
                    "type": "string"
                },
                "probeMode": {
                    "type": "string",
                    "enum": [
                        "httpGet",
                        "tcpSocket",
                        "exec"
                    ]
                },
                "successThreshold": {
                    "type": "integer"
                },
                "tcpSocketPort": {
                    "type": "integer"
                },
                "timeoutSeconds": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.AppRef": {
            "type": "object",
            "properties": {
                "appID": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "envID": {
                    "type": "string"
                },
                "projectID": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.AppSchedulingRuleModel": {
            "type": "object",
            "properties": {
                "appID": {
                    "type": "string"
                },
                "nodeAffinity": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeName": {
                    "type": "string"
                },
                "nodeSelector": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ruleID": {
                    "type": "string"
                },
                "ruleType": {
                    "type": "string"
                },
                "tolerations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AppSchedulingRuleTolerationModel"
                    }
                }
            }
        },
        "models.AppSchedulingRuleTolerationModel": {
            "type": "object",
            "properties": {
                "effect": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "operator": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.AppVolumeModel": {
            "type": "object",
            "properties": {
                "accessModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "appID": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer"
                },
                "mountPath": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "storageClass": {
                    "type": "string"
                },
                "subPath": {
                    "description": "Optional sub-path within the mount",
                    "type": "string"
                },
                "volumeID": {
                    "type": "string"
                },
                "volumeMode": {
                    "type": "string"
                },
                "volumeType": {
                    "type": "string"
                }
            }
        },
        "models.ClusterExtensionModel": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "extensionID": {
                    "type": "string"
                },
                "installMethod": {
                    "type": "string"
                },
                "installed": {
                    "type": "boolean"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ClusterModel": {
            "type": "object",
            "properties": {
                "clusterID": {
                    "type": "string"
                },
                "connectable": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "gatewayIP": {
                    "type": "string"
                },
                "kubeConfig": {
                    "type": "string"
                },
                "nodeCount": {
                    "type": "integer"
                },
                "readyNodeCount": {
                    "type": "integer"
                },
                "serverVersion": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.ClusterNodeModel": {
            "type": "object",
            "properties": {
                "architecture": {
                    "type": "string"
                },
                "clusterID": {
                    "type": "string"
                },
                "containerRuntimeVersion": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "externalIP": {
                    "type": "string"
                },
                "internalIP": {
                    "type": "string"
                },
                "kernelVersion": {
                    "type": "string"
                },
                "kubeletVersion": {
                    "type": "string"
                },
                "nodeName": {
                    "type": "string"
                },
                "operatingSystem": {
                    "type": "string"
                },
                "osImage": {
                    "type": "string"
                },
                "podCIDR": {
                    "type": "string"
                },
                "ready": {
                    "type": "boolean"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.ClusterNodeRef": {
            "type": "object",
            "properties": {
                "clusterDisplayName": {
                    "type": "string"
                },
                "clusterID": {
                    "type": "string"
                },
                "clusterSlug": {
                    "type": "string"
                },
                "nodeIP": {
                    "type": "string"
                },
                "nodeName": {
                    "type": "string"
                }
            }
        },
        "models.ClusterNodeTaintModel": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ClusterRef": {
            "type": "object",
            "properties": {
                "clusterID": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.CreateAppConfigFileRequest": {
            "type": "object",
            "required": [
                "content",
                "fileMode",
                "mountPath",
                "slug"
            ],
            "properties": {
                "content": {
                    "description": "950KB = 950*1024 bytes",
                    "type": "string",
                    "maxLength": 972800
                },
                "fileMode": {
                    "type": "string"
                },
                "mountPath": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.CreateAppGatewayRequest": {
            "type": "object",
            "required": [
                "port",
                "protocol"
            ],
            "properties": {
                "certID": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "exposed": {
                    "type": "boolean"
                },
                "gatewayPort": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                },
                "protocol": {
                    "type": "string",
                    "enum": [
                        "http",
                        "https",
                        "tcp",
                        "udp"
                    ]
                }
            }
        },
        "models.CreateAppProbeRequest": {
            "type": "object",
            "required": [
                "probeMode",
                "type"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "execCommand": {
                    "type": "string"
                },
                "failureThreshold": {
                    "type": "integer"
                },
                "httpGetPath": {
                    "type": "string"
                },
                "httpGetPort": {
                    "type": "integer"
                },
                "initialDelaySeconds": {
                    "type": "integer"
                },
                "periodSeconds": {
                    "type": "integer"
                },
                "probeMode": {
                    "type": "string",
                    "enum": [
                        "httpGet",
                        "tcpSocket",
                        "exec"
                    ]
                },
                "successThreshold": {
                    "type": "integer"
                },
                "tcpSocketPort": {
                    "type": "integer"
                },
                "timeoutSeconds": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "liveness",
                        "readiness",
                        "startup"
                    ]
                }
            }
        },
        "models.CreateAppRequest": {
            "type": "object",
            "required": [
                "appType",
                "containerImage",
                "displayName",
                "replicas",
                "slug"
            ],
            "properties": {
                "appType": {
                    "type": "string",
                    "enum": [
                        "Deployment",
                        "StatefulSet"
                    ]
                },
                "containerImage": {
                    "type": "string"
                },
                "deploy": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "envID": {
                    "type": "string"
                },
                "limitCPU": {
                    "description": "in milliCPU (e.g., 1000 for 1 CPU, 2000 for 2 CPUs)",
                    "type": "integer"
                },
                "limitMemory": {
                    "description": "in MiB",
                    "type": "integer"
                },
                "nodeName": {
                    "description": "Scheduling rules",
                    "type": "string"
                },
                "nodeSelector": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "registryPassword": {
                    "type": "string"
                },
                "registryUsername": {
                    "type": "string"
                },
                "replicas": {
                    "description": "Number of replicas for the app",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "requestCPU": {
                    "description": "in milliCPU (e.g., 500 for 0.5 CPU, 1000 for 1 CPU)",
                    "type": "integer"
                },
                "requestMemory": {
                    "description": "in MiB",
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.CreateAppVolumeRequest": {
            "type": "object",
            "required": [
                "accessModes",
                "capacity",
                "mountPath",
                "slug",
                "volumeMode",
                "volumeType"
            ],
            "properties": {
                "accessModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "capacity": {
                    "type": "integer"
                },
                "mountPath": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "storageClass": {
                    "type": "string"
                },
                "subPath": {
                    "type": "string"
                },
                "volumeMode": {
                    "type": "string",
                    "enum": [
                        "Filesystem",
                        "Block"
                    ]
                },
                "volumeType": {
                    "type": "string"
                }
            }
        },
        "models.CreateClusterRequest": {
            "type": "object",
            "required": [
                "displayName",
                "kubeConfig",
                "slug"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "gatewayIP": {
                    "type": "string"
                },
                "kubeConfig": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.CreateEnvRequest": {
            "type": "object",
            "required": [
                "clusterID",
                "displayName",
                "slug"
            ],
            "properties": {
                "clusterID": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "projectID": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.CreateProjectRequest": {
            "type": "object",
            "required": [
                "displayName",
                "slug"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.DeleteAppConfigFilesRequest": {
            "type": "object",
            "required": [
                "configFileIDs"
            ],
            "properties": {
                "configFileIDs": {
                    "description": "List of config file IDs to delete",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.DeleteAppEnvVarsRequest": {
            "type": "object",
            "required": [
                "envVarIDs"
            ],
            "properties": {
                "envVarIDs": {
                    "description": "List of env var IDs to delete",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.DeleteAppGatewaysRequest": {
            "type": "object",
            "required": [
                "gatewayIDs"
            ],
            "properties": {
                "gatewayIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.DeleteAppVolumesRequest": {
            "type": "object",
            "required": [
                "volumeIDs"
            ],
            "properties": {
                "volumeIDs": {
                    "description": "List of volume IDs to delete",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.DeleteUserRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "models.EnvModel": {
            "type": "object",
            "properties": {
                "clusterID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "envID": {
                    "type": "string"
                },
                "projectID": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.EnvRef": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "envID": {
                    "type": "string"
                },
                "projectID": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.ExecAppContainerTerminalRequest": {
            "type": "object",
            "properties": {
                "appID": {
                    "type": "string"
                },
                "containerName": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                }
            }
        },
        "models.GetAdminResourcesResponse": {
            "type": "object",
            "properties": {
                "clusterNodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ClusterNodeRef"
                    }
                },
                "clusters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ClusterRef"
                    }
                }
            }
        },
        "models.GetUserResourcesResponse": {
            "type": "object",
            "properties": {
                "apps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AppRef"
                    }
                },
                "envs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnvRef"
                    }
                },
                "projects": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProjectRef"
                    }
                }
            }
        },
        "models.InstallClusterExtensionRequest": {
            "type": "object",
            "required": [
                "extensionName",
                "type"
            ],
            "properties": {
                "createNamespace": {
                    "type": "boolean"
                },
                "extensionName": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "helm"
                    ]
                },
                "values": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.ListAppsResponse": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AppModel"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.ListClusterExtensionsResponse": {
            "type": "object",
            "additionalProperties": {
                "$ref": "#/definitions/models.ClusterExtensionModel"
            }
        },
        "models.ListClustersResponse": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ClusterModel"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.ListEnvsResponse": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnvModel"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.ListProjectMembersResponse": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProjectMemberModel"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.ListProjectResponse": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProjectModel"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.ListUsersResponse": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserModel"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.PingClusterKubeConfigRequest": {
            "type": "object",
            "required": [
                "kubeConfig"
            ],
            "properties": {
                "kubeConfig": {
                    "type": "string"
                }
            }
        },
        "models.PlatformStatisticsModel": {
            "type": "object",
            "properties": {
                "totalAppGateways": {
                    "type": "integer"
                },
                "totalApps": {
                    "type": "integer"
                },
                "totalClusters": {
                    "type": "integer"
                },
                "totalEnvs": {
                    "type": "integer"
                },
                "totalProjects": {
                    "type": "integer"
                },
                "totalUsers": {
                    "type": "integer"
                }
            }
        },
        "models.ProjectMemberModel": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "projectID": {
                    "type": "string"
                },
                "projectRole": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.ProjectMemberRole": {
            "type": "object",
            "required": [
                "projectRole"
            ],
            "properties": {
                "projectRole": {
                    "type": "string",
                    "enum": [
                        "owner",
                        "developer",
                        "viewer"
                    ]
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.ProjectModel": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "projectID": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.ProjectRef": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "projectID": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.ProjectStatisticsModel": {
            "type": "object",
            "properties": {
                "totalAppGateways": {
                    "type": "integer"
                },
                "totalApps": {
                    "type": "integer"
                },
                "totalEnvs": {
                    "type": "integer"
                },
                "totalMembers": {
                    "type": "integer"
                }
            }
        },
        "models.SetAppCommandRequest": {
            "type": "object",
            "properties": {
                "containerCommand": {
                    "type": "string"
                }
            }
        },
        "models.SetAppResourceRequest": {
            "type": "object",
            "required": [
                "replicas"
            ],
            "properties": {
                "limitCPU": {
                    "description": "in milliCPU",
                    "type": "integer"
                },
                "limitMemory": {
                    "description": "in MiB",
                    "type": "integer"
                },
                "replicas": {
                    "description": "Number of replicas for the app",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "requestCPU": {
                    "description": "in milliCPU (e.g., 500 for 0.5 CPU, 1000 for 1 CPU)",
                    "type": "integer"
                },
                "requestMemory": {
                    "description": "in MiB",
                    "type": "integer"
                }
            }
        },
        "models.SetAppSchedulingRuleRequest": {
            "type": "object",
            "properties": {
                "nodeAffinity": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nodeName": {
                    "type": "string"
                },
                "nodeSelector": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ruleType": {
                    "type": "string"
                },
                "tolerations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AppSchedulingRuleTolerationModel"
                    }
                }
            }
        },
        "models.TerminateAppInstanceRequest": {
            "type": "object",
            "required": [
                "instanceName"
            ],
            "properties": {
                "instanceName": {
                    "type": "string"
                }
            }
        },
        "models.ToggleAppGatewayExposedRequest": {
            "type": "object",
            "properties": {
                "exposed": {
                    "type": "boolean"
                }
            }
        },
        "models.ToggleAppProbeRequest": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            }
        },
        "models.UpdateAppConfigFileRequest": {
            "type": "object",
            "required": [
                "content",
                "fileMode",
                "mountPath"
            ],
            "properties": {
                "content": {
                    "description": "950KB = 950*1024 bytes",
                    "type": "string",
                    "maxLength": 972800
                },
                "fileMode": {
                    "type": "string"
                },
                "mountPath": {
                    "type": "string"
                }
            }
        },
        "models.UpdateAppGatewayRequest": {
            "type": "object",
            "required": [
                "port",
                "protocol"
            ],
            "properties": {
                "certID": {
                    "type": "string"
                },
                "domain": {
                    "type": "string"
                },
                "exposed": {
                    "type": "boolean"
                },
                "gatewayPort": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                },
                "protocol": {
                    "type": "string",
                    "enum": [
                        "http",
                        "https",
                        "tcp",
                        "udp"
                    ]
                }
            }
        },
        "models.UpdateAppImageRequest": {
            "type": "object",
            "required": [
                "containerImage"
            ],
            "properties": {
                "containerImage": {
                    "type": "string"
                },
                "registryPassword": {
                    "type": "string"
                },
                "registryUsername": {
                    "type": "string"
                }
            }
        },
        "models.UpdateAppProbeRequest": {
            "type": "object",
            "required": [
                "probeMode",
                "type"
            ],
            "properties": {
                "enabled": {
                    "type": "boolean"
                },
                "execCommand": {
                    "type": "string"
                },
                "failureThreshold": {
                    "type": "integer"
                },
                "httpGetPath": {
                    "type": "string"
                },
                "httpGetPort": {
                    "type": "integer"
                },
                "initialDelaySeconds": {
                    "type": "integer"
                },
                "periodSeconds": {
                    "type": "integer"
                },
                "probeMode": {
                    "type": "string",
                    "enum": [
                        "httpGet",
                        "tcpSocket",
                        "exec"
                    ]
                },
                "successThreshold": {
                    "type": "integer"
                },
                "tcpSocketPort": {
                    "type": "integer"
                },
                "timeoutSeconds": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "liveness",
                        "readiness",
                        "startup"
                    ]
                }
            }
        },
        "models.UpdateAppRequest": {
            "type": "object",
            "required": [
                "displayName"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "models.UpdateAppVolumeRequest": {
            "type": "object",
            "required": [
                "mountPath"
            ],
            "properties": {
                "mountPath": {
                    "type": "string"
                },
                "subPath": {
                    "type": "string"
                }
            }
        },
        "models.UpdateClusterExtensionRequest": {
            "type": "object",
            "required": [
                "extensionName",
                "type"
            ],
            "properties": {
                "extensionName": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "helm"
                    ]
                },
                "values": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.UpdateClusterRequest": {
            "type": "object",
            "required": [
                "displayName",
                "kubeConfig"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "kubeConfig": {
                    "type": "string"
                }
            }
        },
        "models.UpdateEnvRequest": {
            "type": "object",
            "required": [
                "displayName"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "envID": {
                    "type": "string"
                }
            }
        },
        "models.UpdateProjectMemberRequest": {
            "type": "object",
            "required": [
                "projectRole"
            ],
            "properties": {
                "projectRole": {
                    "type": "string"
                }
            }
        },
        "models.UpdateProjectRequest": {
            "type": "object",
            "required": [
                "displayName"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "models.UserChangeRoleRequest": {
            "type": "object",
            "required": [
                "newRole"
            ],
            "properties": {
                "newRole": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "user"
                    ]
                }
            }
        },
        "models.UserModel": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserRenameRequest": {
            "type": "object",
            "required": [
                "newUsername",
                "password"
            ],
            "properties": {
                "newUsername": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.UserResetPasswordRequest": {
            "type": "object",
            "required": [
                "newPassword"
            ],
            "properties": {
                "newPassword": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.UserSignInRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserSignOutRequest": {
            "type": "object",
            "required": [
                "userID"
            ],
            "properties": {
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.UserSignUpRequest": {
            "type": "object",
            "required": [
                "email",
                "fullname",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 3
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                }
            }
        },
        "models.UserUpdateRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                }
            }
        }
    }
}