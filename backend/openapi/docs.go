// Package openapi Code generated by swaggo/swag. DO NOT EDIT
package openapi

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/apps/{appID}": {
            "get": {
                "description": "Get app by app ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Get App",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Update App",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated app data",
                        "name": "app",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAppRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an app by app ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Delete App",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/action": {
            "post": {
                "description": "Perform an action on an app (e.g., deploy, restart)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "App Action",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Action to perform on the app",
                        "name": "action",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AppActionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/image": {
            "put": {
                "description": "Update the image of an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Update App Image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New app image",
                        "name": "image",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateAppImageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/instances": {
            "get": {
                "description": "List instances of an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "List App Instances",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.AppInstanceModel"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/instances/terminate": {
            "post": {
                "description": "Terminate a specific instance of an app",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Terminate App Instance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Terminate app instance request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TerminateAppInstanceRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/instances/{instanceName}/containers/{containerName}/exec": {
            "get": {
                "description": "Exec into a terminal of a specific container in an app instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Exec App Container Terminal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Instance name",
                        "name": "instanceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Container name",
                        "name": "containerName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request to execute command in container",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ExecAppContainerTerminalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/instances/{instanceName}/containers/{containerName}/logs": {
            "get": {
                "description": "View logs of a specific container in an app instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "View App Container Logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Instance name",
                        "name": "instanceName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Container name",
                        "name": "containerName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "appID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Optional container name to filter logs",
                        "name": "containerName",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to stream logs",
                        "name": "follow",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "instanceName",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of log lines to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to fetch logs from the previous instance of the container",
                        "name": "previous",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Whether to include timestamps in logs",
                        "name": "showTimestamps",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Fetch logs since this many seconds ago",
                        "name": "sinceSeconds",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Fetch logs since this time (RFC3339 format)",
                        "name": "sinceTime",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of log lines to return from the end",
                        "name": "tailLines",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/apps/{appID}/ref": {
            "get": {
                "description": "Get app ref by app ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Get App Ref",
                "parameters": [
                    {
                        "type": "string",
                        "description": "App ID",
                        "name": "appID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppRef"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/clusters": {
            "get": {
                "description": "List clusters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "List Clusters",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "pageNo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ListClustersResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Create Cluster",
                "parameters": [
                    {
                        "description": "Cluster information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateClusterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ClusterModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/refs": {
            "get": {
                "description": "Get all clusters for refs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "All Cluster Refs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ClusterRef"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}": {
            "get": {
                "description": "Get cluster by cluster ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get Cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ClusterModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing cluster",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Update Cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated cluster information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateClusterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ClusterModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a cluster by cluster ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Delete Cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/disable": {
            "put": {
                "description": "Disable a cluster by cluster ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Disable Cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/enable": {
            "put": {
                "description": "Enable a cluster by cluster ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Enable Cluster",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/clusters/{clusterID}/ref": {
            "get": {
                "description": "Get cluster ref by cluster ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Cluster"
                ],
                "summary": "Get Cluster Ref",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cluster ID",
                        "name": "clusterID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ClusterRef"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/envs/{envID}": {
            "get": {
                "description": "Get env by env ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Env"
                ],
                "summary": "Get Env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Env ID",
                        "name": "envID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.EnvModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Env"
                ],
                "summary": "Update Env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Env ID",
                        "name": "envID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Env Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateEnvRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.EnvModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an env by env ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Env"
                ],
                "summary": "Delete Env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Env ID",
                        "name": "envID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/api.Response"
                        }
                    }
                }
            }
        },
        "/api/v1/envs/{envID}/apps": {
            "get": {
                "description": "List apps under a specific env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Env"
                ],
                "summary": "List Apps Under Env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Env ID",
                        "name": "envID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "envID",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageNo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ListAppsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new app under a specific env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "Create App Under Env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Env ID",
                        "name": "envID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "App data",
                        "name": "app",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateAppRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.AppModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/envs/{envID}/apps/refs": {
            "get": {
                "description": "Get all apps for refs under a specific env",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "App"
                ],
                "summary": "All App Refs Under Env",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Env ID",
                        "name": "envID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "envID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.AppRef"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/envs/{envID}/ref": {
            "get": {
                "description": "Get env ref by env ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Env"
                ],
                "summary": "Get Env Ref",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Env ID",
                        "name": "envID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.EnvRef"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/projects": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "List Projects",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "pageNo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ListProjectResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Create Project",
                "parameters": [
                    {
                        "description": "Project data",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ProjectModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/projects/refs": {
            "get": {
                "description": "Get all projects for refs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "All Project Refs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ProjectRef"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{projectID}": {
            "get": {
                "description": "Get project by project ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ProjectModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project data",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateProjectRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ProjectModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a project by project ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Delete Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/v1/projects/{projectID}/envs": {
            "get": {
                "description": "List envs under a specific project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "List Envs Under Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "pageNo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "projectID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ListEnvsResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new env under a specific project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Create Env Under Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Create Env Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateEnvRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.EnvModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{projectID}/envs/refs": {
            "get": {
                "description": "Get all envs for refs under a specific project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Env"
                ],
                "summary": "All Env Refs Under Project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "projectID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.EnvRef"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{projectID}/members": {
            "get": {
                "description": "List members of a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "List Project Members",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "pageNo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ListProjectMembersResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "Add members to a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Add Project Members",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project members data",
                        "name": "members",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddProjectMembersRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ProjectMemberModel"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a member from a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Remove Project Member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/v1/projects/{projectID}/members/addable": {
            "get": {
                "description": "List users that can be added to a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "List Addable Project Members",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ProjectMemberModel"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{projectID}/members/{userID}": {
            "put": {
                "description": "Update a project member's role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Update Project Member",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project member data",
                        "name": "member",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateProjectMemberRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ProjectMemberModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/projects/{projectID}/ref": {
            "get": {
                "description": "Get project ref by project ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Get Project Ref",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ProjectRef"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "List users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "List Users",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "pageNo",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "query",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "sortOrder",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ListUsersResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/refresh-token": {
            "post": {
                "description": "Refresh user access token using refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Refresh User Token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/sign-in": {
            "post": {
                "description": "Sign in an existing user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Sign In User",
                "parameters": [
                    {
                        "description": "User sign in request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserSignInRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/sign-up": {
            "post": {
                "description": "Sign up a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Sign Up User",
                "parameters": [
                    {
                        "description": "User sign up request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserSignUpRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/{userID}": {
            "get": {
                "description": "Get user by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "description": "Update user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user by user ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Delete user request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DeleteUserRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/{userID}/change-role": {
            "put": {
                "description": "Change user role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Change User Role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User change role request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserChangeRoleRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/{userID}/rename": {
            "put": {
                "description": "Rename user with password verification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Rename User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User rename request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserRenameRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/{userID}/reset-password": {
            "put": {
                "description": "Reset user password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Reset User Password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User reset password request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/api/v1/users/{userID}/sign-out": {
            "post": {
                "description": "Sign out user by clearing cookies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Sign Out User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User sign out request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserSignOutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/api.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.UserModel"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "description": "Get api server health status",
                "summary": "Healthz",
                "responses": {}
            }
        },
        "/version": {
            "get": {
                "description": "Get api server version",
                "summary": "Version",
                "responses": {}
            }
        }
    },
    "definitions": {
        "api.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {
                    "type": "string"
                }
            }
        },
        "app.AppAction": {
            "type": "string",
            "enum": [
                "deploy",
                "start",
                "stop",
                "rollback",
                "rollingUpdate",
                "redeploy"
            ],
            "x-enum-varnames": [
                "AppActionDeploy",
                "AppActionStart",
                "AppActionStop",
                "AppActionRollback",
                "AppActionRollingUpdate",
                "AppActionRedeploy"
            ]
        },
        "app.WorkloadType": {
            "type": "string",
            "enum": [
                "Deployment",
                "StatefulSet"
            ],
            "x-enum-varnames": [
                "WorkloadTypeDeployment",
                "WorkloadTypeStatefulSet"
            ]
        },
        "models.AddProjectMembersRequest": {
            "type": "object",
            "required": [
                "projectMembers"
            ],
            "properties": {
                "projectMembers": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                        "$ref": "#/definitions/models.ProjectMemberRole"
                    }
                }
            }
        },
        "models.AppActionRequest": {
            "type": "object",
            "required": [
                "action"
            ],
            "properties": {
                "action": {
                    "enum": [
                        "deploy",
                        "start",
                        "stop",
                        "rollingUpdate",
                        "rollback",
                        "redeploy"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/app.AppAction"
                        }
                    ]
                }
            }
        },
        "models.AppInstanceContainerModel": {
            "type": "object",
            "properties": {
                "containerName": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.AppInstanceModel": {
            "type": "object",
            "properties": {
                "appID": {
                    "type": "string"
                },
                "containerCount": {
                    "type": "integer"
                },
                "containers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AppInstanceContainerModel"
                    }
                },
                "initContainers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AppInstanceContainerModel"
                    }
                },
                "instanceIP": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                },
                "limitCPU": {
                    "description": "e.g., \"1\", \"2\", \"4\"",
                    "type": "string"
                },
                "limitMemory": {
                    "description": "e.g., \"512Mi\", \"1Gi\", \"2Gi\"",
                    "type": "string"
                },
                "nodeIP": {
                    "type": "string"
                },
                "nodeName": {
                    "type": "string"
                },
                "requestCPU": {
                    "description": "e.g., \"500m\", \"1\", \"2\"",
                    "type": "string"
                },
                "requestMemory": {
                    "description": "e.g., \"256Mi\", \"512Mi\", \"1Gi\"",
                    "type": "string"
                },
                "revision": {
                    "type": "string"
                },
                "runningDuration": {
                    "description": "e.g., \"5m\", \"2h30m\"",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.AppModel": {
            "type": "object",
            "properties": {
                "actualReplicas": {
                    "description": "Number of currently running replicas",
                    "type": "integer"
                },
                "appID": {
                    "type": "string"
                },
                "clusterID": {
                    "type": "string"
                },
                "clusterNamespace": {
                    "type": "string"
                },
                "clusterSlug": {
                    "type": "string"
                },
                "containerImage": {
                    "type": "string"
                },
                "createdAt": {
                    "description": "ISO 8601 format",
                    "type": "string"
                },
                "deployVersion": {
                    "type": "string"
                },
                "deployed": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "envID": {
                    "type": "string"
                },
                "envSlug": {
                    "type": "string"
                },
                "limitCPU": {
                    "description": "in milliCPU (e.g., 1000 for 1 CPU, 2000 for 2 CPUs)",
                    "type": "integer"
                },
                "limitMemory": {
                    "description": "in MiB",
                    "type": "integer"
                },
                "projectID": {
                    "type": "string"
                },
                "projectSlug": {
                    "type": "string"
                },
                "registryPassword": {
                    "type": "string"
                },
                "registryUsername": {
                    "type": "string"
                },
                "replicas": {
                    "description": "Number of replicas for the app",
                    "type": "integer"
                },
                "requestCPU": {
                    "description": "in milliCPU (e.g., 500 for 0.5 CPU, 1000 for 1 CPU)",
                    "type": "integer"
                },
                "requestMemory": {
                    "description": "in MiB",
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "description": "e.g., \"undeployed\", \"starting\", \"running\", \"stopped\", \"stopping\", \"deploying\", \"rolling-update\"",
                    "type": "string"
                },
                "workloadType": {
                    "description": "e.g., \"deployment\", \"statefulset\", \"daemonset\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/app.WorkloadType"
                        }
                    ]
                }
            }
        },
        "models.AppRef": {
            "type": "object",
            "properties": {
                "appID": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "envID": {
                    "type": "string"
                },
                "projectID": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.ClusterModel": {
            "type": "object",
            "properties": {
                "clusterID": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "kubeConfig": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.ClusterRef": {
            "type": "object",
            "properties": {
                "clusterID": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.CreateAppRequest": {
            "type": "object",
            "required": [
                "containerImage",
                "displayName",
                "replicas",
                "slug",
                "workloadType"
            ],
            "properties": {
                "containerImage": {
                    "type": "string"
                },
                "deploy": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "envID": {
                    "type": "string"
                },
                "limitCPU": {
                    "description": "in milliCPU (e.g., 1000 for 1 CPU, 2000 for 2 CPUs)",
                    "type": "integer"
                },
                "limitMemory": {
                    "description": "in MiB",
                    "type": "integer"
                },
                "registryPassword": {
                    "type": "string"
                },
                "registryUsername": {
                    "type": "string"
                },
                "replicas": {
                    "description": "Number of replicas for the app",
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "requestCPU": {
                    "description": "in milliCPU (e.g., 500 for 0.5 CPU, 1000 for 1 CPU)",
                    "type": "integer"
                },
                "requestMemory": {
                    "description": "in MiB",
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                },
                "workloadType": {
                    "type": "string",
                    "enum": [
                        "Deployment",
                        "StatefulSet"
                    ]
                }
            }
        },
        "models.CreateClusterRequest": {
            "type": "object",
            "required": [
                "displayName",
                "kubeConfig",
                "slug"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "kubeConfig": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.CreateEnvRequest": {
            "type": "object",
            "required": [
                "clusterID",
                "displayName",
                "slug"
            ],
            "properties": {
                "clusterID": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "projectID": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.CreateProjectRequest": {
            "type": "object",
            "required": [
                "displayName",
                "slug"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.DeleteUserRequest": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "models.EnvModel": {
            "type": "object",
            "properties": {
                "clusterID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "envID": {
                    "type": "string"
                },
                "projectID": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.EnvRef": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "envID": {
                    "type": "string"
                },
                "projectID": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.ExecAppContainerTerminalRequest": {
            "type": "object",
            "properties": {
                "appID": {
                    "type": "string"
                },
                "containerName": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                }
            }
        },
        "models.ListAppsResponse": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AppModel"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.ListClustersResponse": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ClusterModel"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.ListEnvsResponse": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EnvModel"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.ListProjectMembersResponse": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProjectMemberModel"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.ListProjectResponse": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProjectModel"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.ListUsersResponse": {
            "type": "object",
            "properties": {
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.UserModel"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.ProjectMemberModel": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "projectID": {
                    "type": "string"
                },
                "projectRole": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.ProjectMemberRole": {
            "type": "object",
            "required": [
                "projectRole"
            ],
            "properties": {
                "projectRole": {
                    "type": "string",
                    "enum": [
                        "owner",
                        "developer",
                        "viewer"
                    ]
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.ProjectModel": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "projectID": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.ProjectRef": {
            "type": "object",
            "properties": {
                "displayName": {
                    "type": "string"
                },
                "projectID": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "models.TerminateAppInstanceRequest": {
            "type": "object",
            "required": [
                "instanceName"
            ],
            "properties": {
                "appID": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                }
            }
        },
        "models.UpdateAppImageRequest": {
            "type": "object",
            "required": [
                "containerImage"
            ],
            "properties": {
                "containerImage": {
                    "type": "string"
                },
                "registryPassword": {
                    "type": "string"
                },
                "registryUsername": {
                    "type": "string"
                }
            }
        },
        "models.UpdateAppRequest": {
            "type": "object",
            "required": [
                "displayName"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "models.UpdateClusterRequest": {
            "type": "object",
            "required": [
                "displayName",
                "kubeConfig"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "kubeConfig": {
                    "type": "string"
                }
            }
        },
        "models.UpdateEnvRequest": {
            "type": "object",
            "required": [
                "displayName"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                },
                "envID": {
                    "type": "string"
                }
            }
        },
        "models.UpdateProjectMemberRequest": {
            "type": "object",
            "required": [
                "projectRole"
            ],
            "properties": {
                "projectRole": {
                    "type": "string"
                }
            }
        },
        "models.UpdateProjectRequest": {
            "type": "object",
            "required": [
                "displayName"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "displayName": {
                    "type": "string"
                }
            }
        },
        "models.UserChangeRoleRequest": {
            "type": "object",
            "required": [
                "newRole"
            ],
            "properties": {
                "newRole": {
                    "type": "string",
                    "enum": [
                        "admin",
                        "user"
                    ]
                }
            }
        },
        "models.UserModel": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "refreshToken": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserRenameRequest": {
            "type": "object",
            "required": [
                "newUsername",
                "password"
            ],
            "properties": {
                "newUsername": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.UserResetPasswordRequest": {
            "type": "object",
            "required": [
                "newPassword"
            ],
            "properties": {
                "newPassword": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "models.UserSignInRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserSignOutRequest": {
            "type": "object",
            "required": [
                "userID"
            ],
            "properties": {
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.UserSignUpRequest": {
            "type": "object",
            "required": [
                "email",
                "fullname",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 3
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 3
                }
            }
        },
        "models.UserUpdateRequest": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "fullname": {
                    "type": "string"
                },
                "gender": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "v1",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Ketches API Server",
	Description:      "Ketches api server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
